// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmountSelector render as expected 1`] = `
<AmountSelector
  amount={2}
  category="Child"
  onChange={[Function]}
>
  <div>
    <Text
      style={
        Object {
          "marginRight": ".5em",
        }
      }
    >
      <withConfigConsumer(Base)
        component="span"
        ellipsis={false}
        style={
          Object {
            "marginRight": ".5em",
          }
        }
      >
        <Base
          component="span"
          ellipsis={false}
          getPrefixCls={[Function]}
          prefixCls="ant-typography"
          renderEmpty={[Function]}
          style={
            Object {
              "marginRight": ".5em",
            }
          }
        >
          <LocaleReceiver
            componentName="Text"
          >
            <ResizeObserver
              disabled={true}
              onResize={[Function]}
            >
              <Typography
                aria-label={null}
                className=""
                component="span"
                style={
                  Object {
                    "WebkitLineClamp": null,
                    "marginRight": ".5em",
                  }
                }
              >
                <span
                  aria-label={null}
                  className="ant-typography"
                  style={
                    Object {
                      "WebkitLineClamp": null,
                      "marginRight": ".5em",
                    }
                  }
                >
                  Child
                </span>
              </Typography>
            </ResizeObserver>
          </LocaleReceiver>
        </Base>
      </withConfigConsumer(Base)>
    </Text>
    <Text
      type="secondary"
    >
      <withConfigConsumer(Base)
        component="span"
        ellipsis={false}
        type="secondary"
      >
        <Base
          component="span"
          ellipsis={false}
          getPrefixCls={[Function]}
          prefixCls="ant-typography"
          renderEmpty={[Function]}
          type="secondary"
        >
          <LocaleReceiver
            componentName="Text"
          >
            <ResizeObserver
              disabled={true}
              onResize={[Function]}
            >
              <Typography
                aria-label={null}
                className="ant-typography-secondary"
                component="span"
                style={
                  Object {
                    "WebkitLineClamp": null,
                  }
                }
              >
                <span
                  aria-label={null}
                  className="ant-typography ant-typography-secondary"
                  style={
                    Object {
                      "WebkitLineClamp": null,
                    }
                  }
                >
                  - 11
                </span>
              </Typography>
            </ResizeObserver>
          </LocaleReceiver>
        </Base>
      </withConfigConsumer(Base)>
    </Text>
    <InputNumber
      defaultValue={2}
      min={0}
      onChange={[Function]}
      precision={0}
      size="small"
      step={1}
      style={
        Object {
          "float": "right",
          "marginLeft": "1em",
        }
      }
    >
      <InputNumber
        autoComplete="off"
        className="ant-input-number-sm"
        defaultValue={2}
        downHandler={
          <Icon
            className="ant-input-number-handler-down-inner"
            type="down"
          />
        }
        focusOnUpDown={true}
        min={0}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onPressEnter={[Function]}
        parser={[Function]}
        precision={0}
        prefixCls="ant-input-number"
        required={false}
        step={1}
        style={
          Object {
            "float": "right",
            "marginLeft": "1em",
          }
        }
        upHandler={
          <Icon
            className="ant-input-number-handler-up-inner"
            type="up"
          />
        }
        useTouch={false}
      >
        <div
          className="ant-input-number ant-input-number-sm"
          style={
            Object {
              "float": "right",
              "marginLeft": "1em",
            }
          }
        >
          <div
            className="ant-input-number-handler-wrap"
          >
            <InputHandler
              aria-disabled={false}
              aria-label="Increase Value"
              className="ant-input-number-handler ant-input-number-handler-up "
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              prefixCls="ant-input-number"
              role="button"
              unselectable="unselectable"
            >
              <TouchFeedback
                activeClassName="ant-input-number-handler-active"
                disabled={false}
              >
                <span
                  aria-disabled={false}
                  aria-label="Increase Value"
                  className="ant-input-number-handler ant-input-number-handler-up "
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchCancel={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  role="button"
                  unselectable="unselectable"
                >
                  <Icon
                    className="ant-input-number-handler-up-inner"
                    type="up"
                  >
                    <LocaleReceiver
                      componentName="Icon"
                    >
                      <i
                        aria-label="icon: up"
                        className="anticon anticon-up ant-input-number-handler-up-inner"
                      >
                        <IconReact
                          className=""
                          type="up-o"
                        >
                          <svg
                            aria-hidden="true"
                            className=""
                            data-icon="up"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-up"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 0 0 140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"
                              key="svg-up-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </i>
                    </LocaleReceiver>
                  </Icon>
                </span>
              </TouchFeedback>
            </InputHandler>
            <InputHandler
              aria-disabled={false}
              aria-label="Decrease Value"
              className="ant-input-number-handler ant-input-number-handler-down "
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              prefixCls="ant-input-number"
              role="button"
              unselectable="unselectable"
            >
              <TouchFeedback
                activeClassName="ant-input-number-handler-active"
                disabled={false}
              >
                <span
                  aria-disabled={false}
                  aria-label="Decrease Value"
                  className="ant-input-number-handler ant-input-number-handler-down "
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchCancel={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  role="button"
                  unselectable="unselectable"
                >
                  <Icon
                    className="ant-input-number-handler-down-inner"
                    type="down"
                  >
                    <LocaleReceiver
                      componentName="Icon"
                    >
                      <i
                        aria-label="icon: down"
                        className="anticon anticon-down ant-input-number-handler-down-inner"
                      >
                        <IconReact
                          className=""
                          type="down-o"
                        >
                          <svg
                            aria-hidden="true"
                            className=""
                            data-icon="down"
                            fill="currentColor"
                            focusable="false"
                            height="1em"
                            key="svg-down"
                            viewBox="64 64 896 896"
                            width="1em"
                          >
                            <path
                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                              key="svg-down-svg-0"
                            />
                          </svg>
                        </IconReact>
                      </i>
                    </LocaleReceiver>
                  </Icon>
                </span>
              </TouchFeedback>
            </InputHandler>
          </div>
          <div
            className="ant-input-number-input-wrap"
          >
            <input
              aria-valuemin={0}
              aria-valuenow={2}
              autoComplete="off"
              className="ant-input-number-input"
              min={0}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onMouseUp={[Function]}
              required={false}
              role="spinbutton"
              step={1}
              value="2"
            />
          </div>
        </div>
      </InputNumber>
    </InputNumber>
  </div>
</AmountSelector>
`;
