// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when generatePassengerSelectorLabel 1`] = `
<div>
  1 Adults
</div>
`;

exports[`when generatePassengerSelectorLabel and does not have any pssenger selected 1`] = `
<div>
  <Popover
    content={
      <span>
        <Icon
          style={
            Object {
              "color": "#f5222d",
              "marginRight": "10px",
            }
          }
          type="warning"
        />
        You must select at least one passenger
      </span>
    }
    defaultVisible={true}
    mouseEnterDelay={0.1}
    mouseLeaveDelay={0.1}
    overlayStyle={Object {}}
    placement="top"
    transitionName="zoom-big"
    trigger="click"
  >
    <Tooltip
      arrowPointAtCenter={false}
      autoAdjustOverflow={true}
      content={
        <span>
          <Icon
            style={
              Object {
                "color": "#f5222d",
                "marginRight": "10px",
              }
            }
            type="warning"
          />
          You must select at least one passenger
        </span>
      }
      defaultVisible={true}
      mouseEnterDelay={0.1}
      mouseLeaveDelay={0.1}
      overlay={
        <div>
          <div
            className="ant-popover-inner-content"
          >
            <span>
              <Icon
                style={
                  Object {
                    "color": "#f5222d",
                    "marginRight": "10px",
                  }
                }
                type="warning"
              />
              You must select at least one passenger
            </span>
          </div>
        </div>
      }
      overlayStyle={Object {}}
      placement="top"
      prefixCls="ant-popover"
      transitionName="zoom-big"
      trigger="click"
    >
      <Tooltip
        align={Object {}}
        arrowContent={null}
        arrowPointAtCenter={false}
        autoAdjustOverflow={true}
        builtinPlacements={
          Object {
            "bottom": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tc",
                "bc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomLeft": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "bottomRight": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "left": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cr",
                "cl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftBottom": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "bl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "leftTop": Object {
              "ignoreShake": true,
              "offset": Array [
                -4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tr",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "right": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "cl",
                "cr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightBottom": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "br",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "rightTop": Object {
              "ignoreShake": true,
              "offset": Array [
                4,
                0,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "tl",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "top": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bc",
                "tc",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topLeft": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "bl",
                "tl",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
            "topRight": Object {
              "ignoreShake": true,
              "offset": Array [
                0,
                -4,
              ],
              "overflow": Object {
                "adjustX": 1,
                "adjustY": 1,
              },
              "points": Array [
                "br",
                "tr",
              ],
              "targetOffset": Array [
                0,
                0,
              ],
            },
          }
        }
        content={
          <span>
            <Icon
              style={
                Object {
                  "color": "#f5222d",
                  "marginRight": "10px",
                }
              }
              type="warning"
            />
            You must select at least one passenger
          </span>
        }
        defaultVisible={true}
        destroyTooltipOnHide={false}
        mouseEnterDelay={0.1}
        mouseLeaveDelay={0.1}
        onPopupAlign={[Function]}
        onVisibleChange={[Function]}
        overlay={
          <div>
            <div
              className="ant-popover-inner-content"
            >
              <span>
                <Icon
                  style={
                    Object {
                      "color": "#f5222d",
                      "marginRight": "10px",
                    }
                  }
                  type="warning"
                />
                You must select at least one passenger
              </span>
            </div>
          </div>
        }
        overlayStyle={Object {}}
        placement="top"
        prefixCls="ant-popover"
        transitionName="zoom-big"
        trigger="click"
        visible={true}
      >
        <Trigger
          action="click"
          afterPopupVisibleChange={[Function]}
          arrowContent={null}
          arrowPointAtCenter={false}
          autoAdjustOverflow={true}
          blurDelay={0.15}
          builtinPlacements={
            Object {
              "bottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tc",
                  "bc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "left": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cr",
                  "cl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "leftTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  -4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "right": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "cl",
                  "cr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightBottom": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "rightTop": Object {
                "ignoreShake": true,
                "offset": Array [
                  4,
                  0,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "top": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bc",
                  "tc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "ignoreShake": true,
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          content={
            <span>
              <Icon
                style={
                  Object {
                    "color": "#f5222d",
                    "marginRight": "10px",
                  }
                }
                type="warning"
              />
              You must select at least one passenger
            </span>
          }
          defaultPopupVisible={true}
          destroyPopupOnHide={false}
          focusDelay={0}
          getDocument={[Function]}
          getPopupClassNameFromAlign={[Function]}
          hideAction={Array []}
          mask={false}
          maskClosable={true}
          mouseEnterDelay={0.1}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onPopupVisibleChange={[Function]}
          overlay={
            <div>
              <div
                className="ant-popover-inner-content"
              >
                <span>
                  <Icon
                    style={
                      Object {
                        "color": "#f5222d",
                        "marginRight": "10px",
                      }
                    }
                    type="warning"
                  />
                  You must select at least one passenger
                </span>
              </div>
            </div>
          }
          popup={[Function]}
          popupAlign={Object {}}
          popupClassName=""
          popupPlacement="top"
          popupStyle={Object {}}
          popupTransitionName="zoom-big"
          popupVisible={true}
          prefixCls="ant-popover"
          showAction={Array []}
          visible={true}
        >
          <Text
            className="ant-popover-open"
            key="trigger"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            type="danger"
          >
            <withConfigConsumer(Base)
              className="ant-popover-open"
              component="span"
              ellipsis={false}
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchStart={[Function]}
              type="danger"
            >
              <Base
                className="ant-popover-open"
                component="span"
                ellipsis={false}
                getPrefixCls={[Function]}
                onClick={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
                prefixCls="ant-typography"
                renderEmpty={[Function]}
                type="danger"
              >
                <LocaleReceiver
                  componentName="Text"
                >
                  <ResizeObserver
                    disabled={true}
                    onResize={[Function]}
                  >
                    <Typography
                      aria-label={null}
                      className="ant-popover-open ant-typography-danger"
                      component="span"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "WebkitLineClamp": null,
                        }
                      }
                    >
                      <span
                        aria-label={null}
                        className="ant-typography ant-popover-open ant-typography-danger"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "WebkitLineClamp": null,
                          }
                        }
                      >
                        0 Travelers
                      </span>
                    </Typography>
                  </ResizeObserver>
                </LocaleReceiver>
              </Base>
            </withConfigConsumer(Base)>
          </Text>
          <Portal
            didUpdate={[Function]}
            getContainer={[Function]}
            key="portal"
          >
            <Portal
              containerInfo={
                <div
                  style="position: absolute; top: 0px; left: 0px; width: 100%;"
                >
                  <div>
                    <div
                      class="ant-popover ant-popover-placement-top zoom-big-appear"
                      style="left: -999px; top: -1003px;"
                    >
                      <div
                        class="ant-popover-content"
                      >
                        <div
                          class="ant-popover-arrow"
                        />
                        <div
                          class="ant-popover-inner"
                          role="tooltip"
                        >
                          <div>
                            <div
                              class="ant-popover-inner-content"
                            >
                              <span>
                                <i
                                  aria-label="icon: warning"
                                  style="color: rgb(245, 34, 45); margin-right: 10px;"
                                  class="anticon anticon-warning"
                                >
                                  <svg
                                    viewBox="64 64 896 896"
                                    focusable="false"
                                    class=""
                                    data-icon="warning"
                                    width="1em"
                                    height="1em"
                                    fill="currentColor"
                                    aria-hidden="true"
                                  >
                                    <path
                                      d="M464 720a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z"
                                    />
                                  </svg>
                                </i>
                                You must select at least one passenger
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              }
            >
              <Popup
                action="click"
                align={
                  Object {
                    "ignoreShake": true,
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bc",
                      "tc",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  }
                }
                className=""
                destroyPopupOnHide={false}
                getClassNameFromAlign={[Function]}
                getRootDomNode={[Function]}
                mask={false}
                onAlign={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
                prefixCls="ant-popover"
                style={Object {}}
                transitionName="zoom-big"
                visible={true}
              >
                <div>
                  <Animate
                    animation={Object {}}
                    component=""
                    componentProps={Object {}}
                    exclusive={true}
                    onAppear={[Function]}
                    onEnd={[Function]}
                    onEnter={[Function]}
                    onLeave={[Function]}
                    showProp="xVisible"
                    transitionAppear={true}
                    transitionEnter={true}
                    transitionLeave={true}
                    transitionName="zoom-big"
                  >
                    <AnimateChild
                      animation={Object {}}
                      key="popup"
                      transitionAppear={true}
                      transitionEnter={true}
                      transitionLeave={true}
                      transitionName="zoom-big"
                    >
                      <Align
                        align={
                          Object {
                            "ignoreShake": true,
                            "offset": Array [
                              0,
                              -4,
                            ],
                            "overflow": Object {
                              "adjustX": 1,
                              "adjustY": 1,
                            },
                            "points": Array [
                              "bc",
                              "tc",
                            ],
                            "targetOffset": Array [
                              0,
                              0,
                            ],
                          }
                        }
                        childrenProps={
                          Object {
                            "visible": "xVisible",
                          }
                        }
                        disabled={false}
                        key="popup"
                        monitorBufferTime={50}
                        monitorWindowResize={true}
                        onAlign={[Function]}
                        target={[Function]}
                        xVisible={true}
                      >
                        <PopupInner
                          className="ant-popover  ant-popover-placement-top "
                          hiddenClassName="ant-popover-hidden"
                          onMouseDown={[Function]}
                          onTouchStart={[Function]}
                          prefixCls="ant-popover"
                          style={Object {}}
                          visible={true}
                        >
                          <div
                            className="ant-popover  ant-popover-placement-top "
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            style={Object {}}
                          >
                            <LazyRenderBox
                              className="ant-popover-content"
                              visible={true}
                            >
                              <div
                                className="ant-popover-content"
                              >
                                <div
                                  className="ant-popover-arrow"
                                  key="arrow"
                                />
                                <Content
                                  key="content"
                                  overlay={
                                    <div>
                                      <div
                                        className="ant-popover-inner-content"
                                      >
                                        <span>
                                          <Icon
                                            style={
                                              Object {
                                                "color": "#f5222d",
                                                "marginRight": "10px",
                                              }
                                            }
                                            type="warning"
                                          />
                                          You must select at least one passenger
                                        </span>
                                      </div>
                                    </div>
                                  }
                                  prefixCls="ant-popover"
                                >
                                  <div
                                    className="ant-popover-inner"
                                    role="tooltip"
                                  >
                                    <div>
                                      <div
                                        className="ant-popover-inner-content"
                                      >
                                        <span>
                                          <Icon
                                            style={
                                              Object {
                                                "color": "#f5222d",
                                                "marginRight": "10px",
                                              }
                                            }
                                            type="warning"
                                          >
                                            <LocaleReceiver
                                              componentName="Icon"
                                            >
                                              <i
                                                aria-label="icon: warning"
                                                className="anticon anticon-warning"
                                                style={
                                                  Object {
                                                    "color": "#f5222d",
                                                    "marginRight": "10px",
                                                  }
                                                }
                                              >
                                                <IconReact
                                                  className=""
                                                  type="warning-o"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className=""
                                                    data-icon="warning"
                                                    fill="currentColor"
                                                    focusable="false"
                                                    height="1em"
                                                    key="svg-warning"
                                                    viewBox="64 64 896 896"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M464 720a48 48 0 1 0 96 0 48 48 0 1 0-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z"
                                                      key="svg-warning-svg-0"
                                                    />
                                                  </svg>
                                                </IconReact>
                                              </i>
                                            </LocaleReceiver>
                                          </Icon>
                                          You must select at least one passenger
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </Content>
                              </div>
                            </LazyRenderBox>
                          </div>
                        </PopupInner>
                      </Align>
                    </AnimateChild>
                  </Animate>
                </div>
              </Popup>
            </Portal>
          </Portal>
        </Trigger>
      </Tooltip>
    </Tooltip>
  </Popover>
</div>
`;

exports[`when generatePassengerSelectorLabel and have more than one category selected 1`] = `
<div>
  4 Travelers
</div>
`;
